name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: llm_advisor_app/package-lock.json

      - name: Install & Build NextJS
        working-directory: llm_advisor_app
        run: |
          npm ci
          npm run build

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: llm_advisor_app

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install AWS SAM CLI
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Build Backend with SAM
        working-directory: backend
        run: sam build

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/.aws-sam/build

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [build-backend]
    environment: production
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend/.aws-sam/build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Backend with SAM
        working-directory: backend
        run: |
          sam deploy --stack-name my-backend-stack \
            --capabilities CAPABILITY_IAM \
            --region ${{ secrets.AWS_REGION }} \
            --s3-bucket artifacts-llm-advisor-cloudform \
            --no-confirm-changeset \
            --parameter-overrides "Environment=prod" \
            --no-fail-on-empty-changeset

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: [build-frontend]
    environment: production
    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-dist

      - name: Create deployment script
        run: |
          cat << 'EOF' > deploy.sh
          #!/bin/bash

          # Stop the current application
          pm2 delete advisor_app || true

          # Clean up and prepare directories
          rm -rf ~/frontend-old
          mv ~/frontend ~/frontend-old || true
          rm -rf ~/frontend
          mv ~/frontend-temp ~/frontend

          # Install dependencies and rebuild
          cd ~/frontend
          npm ci --production

          # Start the application
          pm2 start npm --name "advisor_app" -- start

          # Clean up
          rm -rf ~/frontend-old
          EOF

      - name: Deploy to LightSail
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Prepare deployment directory
            rm -rf ~/frontend-temp
            mkdir -p ~/frontend-temp

      - name: Copy Files to LightSail
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: "frontend-dist/*,deploy.sh"
          target: "/home/ubuntu/frontend-temp"
          strip_components: 1

      - name: Execute Deployment
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            chmod +x ~/frontend-temp/deploy.sh
            ~/frontend-temp/deploy.sh
