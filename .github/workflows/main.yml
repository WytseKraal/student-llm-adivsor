name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: llm_advisor_app
        run: npm ci

      - name: Build and Export Next.js
        working-directory: llm_advisor_app
        run: npm run build
        env:
          NEXT_PUBLIC_ENV: production

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-out
          path: llm_advisor_app/out

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install AWS SAM CLI
        run: |
          python -m pip install --upgrade pip
          pip install aws-sam-cli

      - name: Build Backend with SAM
        working-directory: backend
        run: sam build

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/.aws-sam/build

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    # Using an environment here lets you require manual approval.
    environment: production
    steps:
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-out
          path: llm_advisor_app/out

      - name: Download Backend Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/.aws-sam/build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Frontend to S3 and Invalidate CloudFront Cache
        run: |
          aws s3 sync llm_advisor_app/out s3://${{ secrets.BUCKET_NAME }} --delete
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Deploy Backend with SAM
        working-directory: backend
        run: |
          sam deploy --stack-name my-backend-stack \
            --capabilities CAPABILITY_IAM \
            --region ${{ secrets.AWS_REGION }} \
            --s3-bucket artifacts-llm-advisor-cloudform \
            --no-confirm-changeset \
            --parameter-overrides "Environment=prod" \
            --no-fail-on-empty-changeset
